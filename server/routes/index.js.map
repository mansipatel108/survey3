{"version":3,"sources":["routes/index.ts"],"names":[],"mappings":";AAAA,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AACpC,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;AAC/D,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AACtC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAI9B,IAAO,SAAS,WAAW,gBAAgB,CAAC,CAAC;AAC7C,IAAO,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAE7B,IAAO,WAAW,WAAW,kBAAkB,CAAC,CAAC;AACjD,IAAO,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;AAEnC,IAAO,iBAAiB,WAAW,wBAAwB,CAAC,CAAC;AAC7D,IAAO,YAAY,GAAG,iBAAiB,CAAC,YAAY,CAAC;AACrD,IAAI,UAAU,EAAC,WAAW,CAAC;AAE3B,oBAAoB;AACpB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IACnE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;QAChB,KAAK,EAAE,MAAM;QACb,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,EAAE,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC;AAEH,sBAAsB;AACtB,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IACzE,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE;QACjB,KAAK,EAAE,QAAQ;QACf,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,EAAE,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC;AAEH,qBAAqB;AACrB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IACxE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;QAChB,KAAK,EAAE,OAAO;QACd,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,EAAE,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC;AAEH,uBAAuB;AACvB,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAC1E,GAAG,CAAC,KAAK,CAAC,gBAAgB,EAAE,wCAAwC,CAAC,CAAC;IACtE,GAAG,CAAC,KAAK,CAAC,cAAc,EAAC,wBAAwB,CAAC,CAAC;IACnD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAClB,KAAK,EAAE,SAAS;QAChB,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,EAAE,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2BE;AACF,uBAAuB;AACvB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IACtE,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACX,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;YAChB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC;YACnC,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;SACpD,CAAC,CAAC;QACH,MAAM,CAAC;IACX,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,2BAA2B;AAC3B,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE;IACjD,eAAe,EAAE,QAAQ;IACzB,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE,IAAI;CACrB,CAAC,CAAC,CAAC;AAEJ,gCAAgC;AAChC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IACtE,EAAE,CAAA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACV,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;YAChB,KAAK,EAAE,OAAO;YACd,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;SACpD,CAAC,CAAC;IACP,CAAC;IACD,IAAI,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,oCAAoC;AACpC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAC,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IACtE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,IAAI,CAAC,OAAO,CAAC,EAAC,UAAU,EAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAC,EAAE,UAAC,GAAG,EAAE,IAAI;QACpD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG;YACrC,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,GAAG,CAAC,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,IAAI,CAAC,UAAC,GAAG;oBACV,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;wBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC;oBAED,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAChC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACP,CAAC;QACJ,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,8BAA8B;AAC9B,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IACzE,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACX,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;YACnB,KAAK,EAAE,UAAU;YACjB,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC;YACtC,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;SACpD,CAAC,CAAC;QACH,MAAM,CAAC;IACX,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kCAAkC;AAClC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IAC1E,2BAA2B;IAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CACnB,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;QAC3B,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;QAC3B,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;QACrB,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;KAClC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG;QACvB,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;YACL,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YACxC,EAAE,CAAA,CAAC,GAAG,CAAC,IAAI,IAAI,iBAAiB,CAAC,CAAC,CAAC;gBACnC,GAAG,CAAC,KAAK,CAAC,iBAAiB,EAAE,0CAA0C,CAAC,CAAC;YACzE,CAAC;YACD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;gBACzB,KAAK,EAAE,UAAU;gBACjB,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC;gBACtC,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;aACpD,CAAC,CAAC;QACR,CAAC;QACD,gCAAgC;QAChC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;YAC7C,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC;AAEH,4BAA4B;AAC5B,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,GAAmB,EAAE,GAAqB;IAC7D,GAAG,CAAC,MAAM,EAAE,CAAC;IACb,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC;AAGH,wFAAwF;AAExF,qBAAqB,GAAG,EAAE,GAAG,EAAE,IAAI;IAC/B,iCAAiC;IACjC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IACD,IAAI,EAAE,CAAC;AACX,CAAC;AAED,uCAAuC;AACvC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI;IACnC,MAAM,CAAC,IAAI,CAAC,UAAS,GAAG,EAAE,OAAO;QAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,CACR,CAAC;YACG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CACJ,CAAC;YACI,WAAW,GAAG,OAAO,CAAC;YACvB,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE;gBACxB,KAAK,EAAE,WAAW;gBAClB,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;gBACjD,OAAO,EAAE,OAAO;aACnB,CAAC,CAAC;QAEP,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,2BAA2B;AAC1B,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI;IACjD,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACvB,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAS,GAAG,EAAE,MAAM;QACpC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,MAAM,CAAC,uBAAuB,EAAE;gBAChC,KAAK,EAAE,aAAa;gBACpB,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;gBACjD,MAAM,EAAE,MAAM;aACjB,CAAC,CAAC;YACH,UAAU,GAAG,MAAM,CAAC,CAAC,wBAAwB;QACjD,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACJ,wBAAwB;AACvB,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI;IACnD,sDAAsD;IACtD,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,CAChC,CAAC;QACE,YAAY,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAC,UAAS,GAAG;YACxD,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,CAAC;YACD,IAAI,CACJ,CAAC;gBACG,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACpC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,6BAA6B;gBAC1D,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG;oBACzB,EAAE,CAAC,CAAC,GAAG,CAAC;wBAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC3B,IAAI;wBAAC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;IACN,CAAC;IACD,IAAI,YAAY,GAAG,EAAE,CAAC;IACrB,IAAI,YAAY,GAAG,EAAE,CAAC;IACrB,IAAI,YAAY,GAAG,EAAE,CAAC;IACrB,IAAI,YAAY,GAAG,EAAE,CAAC;IACrB,IAAI,YAAY,GAAG,EAAE,CAAC;IAE3B,kGAAkG;IAClG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtD,YAAY,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;IAChD,CAAC;IACA,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACvD,YAAY,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;IAChD,CAAC;IACA,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACvD,YAAY,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;IAChD,CAAC;IACJ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACnD,YAAY,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;IAChD,CAAC;IACA,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACvD,YAAY,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;IAChD,CAAC;IAED,uBAAuB;IACvB,YAAY,CAAC,MAAM,CAAC;QAChB,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;QACvB,YAAY,EAAE,YAAY;QAC1B,YAAY,EAAE,YAAY;QAC1B,YAAY,EAAE,YAAY;QAC1B,YAAY,EAAE,YAAY;QAC1B,YAAY,EAAE,YAAY;QAC1B,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE;KAC3B,EAAE,UAAS,GAAG,EAAE,MAAM;QACnB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA,kBAAkB;QACxC,CAAC;IACL,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AAIH,MAAM,CAAC,GAAG,CAAC,wBAAwB,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI;IACzD,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;QAChB,KAAK,EAAE,WAAW;QAClB,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;QACjD,OAAO,EAAE,WAAW;KACvB,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAGJ,2BAA2B;AAC3B,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAC5F,GAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE;QAC5B,KAAK,EAAE,gBAAgB;QACvB,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;QACjD,QAAQ,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE;KAC9C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,MAAM;AACN,MAAM,CAAC,GAAG,CAAC,oBAAoB,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IACjG,GAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE;QAC5B,KAAK,EAAE,gBAAgB;QACvB,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;QACjD,QAAQ,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE;KAC9C,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,wBAAwB;AACxB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI;IACzC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACZ,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;YAChB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC;YACnC,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;SACpD,CAAC,CAAC;IACP,CAAC;IACD,IAAI,CAAC,CAAC;QACF,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAA,CAAA,qCAAqC;IAC3E,CAAC;AACL,CAAC,CAAC,CAAC;AAGH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"routes/index.js","sourcesContent":["import express = require('express');\nvar sendgrid = require('sendgrid')('ACCOUNT_NAME', 'PASSWORD');\nimport passport = require('passport');\nvar router = express.Router();\n\n// db references\nimport mongoose = require('mongoose');\nimport userModel = require('../models/user');\nimport User = userModel.User;\n\nimport surveyModel = require('../models/survey');\nimport Survey = surveyModel.Survey;\n\nimport surveyAnswerModel = require('../models/surveyanswer');\nimport SurveyAnswer = surveyAnswerModel.SurveyAnswer;\nvar tempSurvey,tempSurveys;\n\n/* GET home page. */\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n    res.render('index', { \n        title: 'Home', \n        displayName: req.user ? req.user.displayName : '' });\n});\n\n/* GET survey page. */\nrouter.get('/survey', (req: express.Request, res: express.Response, next: any) => {\n    res.render('survey', { \n        title: 'Survey',\n        displayName: req.user ? req.user.displayName : '' });\n});\n\n/* GET about page. */\nrouter.get('/about', (req: express.Request, res: express.Response, next: any) => {\n    res.render('about', { \n        title: 'About',\n        displayName: req.user ? req.user.displayName : '' });\n});\n\n/* GET contact page. */\nrouter.get('/contact', (req: express.Request, res: express.Response, next: any) => {\n    req.flash('successmessage', 'Thank You. Your message has been sent.');\n    req.flash('errormessage','An Error has occurred.');\n    res.render('contact', { \n        title: 'Contact', \n        messages: null,\n        displayName: req.user ? req.user.displayName : '' });\n});\n\n/* Email processing \nrouter.post('/contact', (req: express.Request, res: express.Response, next: any) => {\n    \n    sendgrid.send({\n        to: 'mpatel.y@gmail.com',\n        from: req.body.email,\n        subject: 'Contact Form Submission',\n        text: \"This message has been sent from the contact form at [MongoDB Demo]\\r\\n\\r\\n\" +\n        \"Name: \" + req.body.name + \"\\r\\n\\r\\n\" +\n        \"Phone: \" + req.body.phone + \"\\r\\n\\r\\n\" +\n        req.body.message,\n        html: \"This message has been sent from the contact form at [MongoDB Demo]<br><br>\" +\n        \"<strong>Name:</strong> \" + req.body.name + \"<br><br>\" +\n        \"<strong>Phone:</strong> \" + req.body.phone + \"<br><br>\" +\n        req.body.message\n    },\n    \n        (err, json) => {\n            if (err) { res.status(500).json('error'); \n            }\n            res.render('contact', { \n                title: 'Contact',\n                messages: req.flash('successmessage')\n         });\n\n        });\n});\n*/\n/* Render Login Page */\nrouter.get('/login', (req:express.Request, res: express.Response, next:any) => {\n    if(!req.user) {\n        res.render('login', {\n            title: 'Login',\n            messages: req.flash('loginMessage'),\n            displayName: req.user ? req.user.displayName : ''\n        });\n        return;\n    } else {\n        return res.redirect('/users');\n    }\n});\n\n/* Process Login Request */\nrouter.post('/login', passport.authenticate('local', {\n    successRedirect: '/users',\n    failureRedirect: '/login',\n    failureFlash: true\n}));\n\n/* Render Password Reset page */\nrouter.get('/reset', (req:express.Request, res: express.Response, next:any) => {\n    if(req.user) {\n        res.render('reset', {\n            title: 'Reset',\n            displayName: req.user ? req.user.displayName : '' \n        });  \n    }\n    else {\n        return res.redirect('/login');\n    }\n});\n\n/* Process Password Reset Request */\nrouter.post('/reset',(req:express.Request, res: express.Response, next:any) => {\n    console.log(req.user.username);\n    User.findOne({'username':req.user.username}, (err, user) => {\n       user.setPassword(req.body.password, (err) =>{\n          if(err) {\n              console.log(err);\n              next(err);\n          } else {\n              user.save((err) =>{\n                  if(err) {\n                      console.log(err);\n                  }\n                  \n                  console.log('Password Changed');\n                  res.redirect('/users');\n              });\n          }\n       }); \n    });\n});\n\n/* Render Registration page */\nrouter.get('/register', (req:express.Request, res: express.Response, next:any) => {\n    if(!req.user) {\n        res.render('register', {\n            title: 'Register',\n            messages: req.flash('registerMessage'),\n            displayName: req.user ? req.user.displayName : ''\n        });\n        return;\n    } else {\n        return res.redirect('/');\n    }\n});\n\n/* Process Registration Request */\nrouter.post('/register', (req:express.Request, res: express.Response, next:any) => {\n    // attempt to register user\n    User.register(new User(\n       { username: req.body.username,\n         password: req.body.password,\n         email: req.body.email,\n         displayName: req.body.displayName\n       }), req.body.password, (err) => {\n           if(err) {\n               console.log('Error Inserting New Data');\n               if(err.name == 'UserExistsError') {\n               req.flash('registerMessage', 'Registration Error: User Already Exists!');\n               }\n               return res.render('register', {\n                    title: 'Register',\n                    messages: req.flash('registerMessage'),\n                    displayName: req.user ? req.user.displayName : ''\n                });\n           }\n           // if registration is successful\n           return passport.authenticate('local')(req, res, ()=>{\n              res.redirect('/users'); \n           });\n       });\n});\n\n/* Process Logout Request */\nrouter.get('/logout', (req:express.Request, res: express.Response) => { \n    req.logOut();\n    res.redirect('/login');\n});\n\n\n/* ---------------------------------------------------------------------------------  */\n\nfunction requireAuth(req, res, next) {\n    // check if the user is logged in\n    if (!req.isAuthenticated()) {\n        return res.redirect('/login');\n    }\n    next();\n}\n\n// Get Home page and render survey list\nrouter.get('/', function(req, res, next) {    \n    Survey.find(function(err, surveys) {\n        if (err) \n        {\n            console.log(err);\n            res.end(err);\n        }\n        else\n        {                \n             tempSurveys = surveys;\n            res.render('surveys/index', {\n                title: 'MS Survey',\n                displayName: req.user ? req.user.displayName : '',\n                surveys: surveys              \n            });\n            \n        }\n    });\n});\n\n//render respondSurvey page\n router.get('/takeSurvey/:id', function(req, res, next) {\n     var id = req.params.id;\n     Survey.findById(id, function(err, Survey) {\n         if (err) {\n             console.log(err);\n             res.end(err);\n         }\n         else {            \n             res.render('surveys/respondSurvey', {\n                 title: \"Take Survey\",\n                 displayName: req.user ? req.user.displayName : '',\n                 survey: Survey,               \n             });\n             tempSurvey = Survey; //take the survey object\n         }\n     }); \n });\n// submit survey answers\n router.post('/takeSurvey/:id', function (req, res, next) {\n     //if survey has been modified , delete all the answer \n     if (tempSurvey.modified == true)\n     {\n        SurveyAnswer.remove({ surveyId: req.params.id },function(err){\n            if (err) {\n                console.log(err);\n                res.end(err);\n            }\n            else\n            {\n                console.log(\"successfully removed\");\n                tempSurvey.modified = false; // bring status back to false\n                tempSurvey.save(function (err) {  // save to db\n                    if (err) return Error(err); \n                    else console.log(\"modified status changed!\");\n                });\n            }\n        });\n     }\n     var shorAns1Arry = [];\n      var shorAns2Arry = [];\n       var shorAns3Arry = [];\n        var shorAns4Arry = [];\n         var shorAns5Arry = [];\n  \n    // loop through the questions, find post value by i and stored into object form then push to array\n    for (var i = 0; i < tempSurvey.shortAnswer1.length; i++) {\n        shorAns1Arry.push({ shrtAns1: req.body[i] })\n    }\n     for (var i = 0; i < tempSurvey.shortAnswer2.length; i++) {\n        shorAns2Arry.push({ shrtAns2: req.body[i] })\n    }\n     for (var i = 0; i < tempSurvey.shortAnswer3.length; i++) {\n        shorAns3Arry.push({ shrtAns3: req.body[i] })\n    }\n for (var i = 0; i < tempSurvey.shortAnswer4.length; i++) {\n        shorAns4Arry.push({ shrtAns4: req.body[i] })\n    }\n     for (var i = 0; i < tempSurvey.shortAnswer5.length; i++) {\n        shorAns5Arry.push({ shrtAns5: req.body[i] })\n    }\n    \n    // store object into db\n    SurveyAnswer.create({\n        surveyId: req.params.id,\n        shortAnswer1: shorAns1Arry,\n        shortAnswer2: shorAns2Arry,\n        shortAnswer3: shorAns3Arry,\n        shortAnswer4: shorAns4Arry,\n        shortAnswer5: shorAns5Arry,\n        submitted_at: Date.now()\n    }, function(err, Survey) {\n        if (err) {\n            console.log(err);\n            res.end(err);\n        }\n        else {\n            res.redirect('/');//after submission\n        }\n    });\n });\n  \n\n\n router.get('/takeSurvey/cancel/:id', function (req, res, next) {\n     res.render('index', {\n         title: 'MS Survey',\n         displayName: req.user ? req.user.displayName : '',\n         surveys: tempSurveys\n     });    \n });\n\n\n/* GET survey list page. */\nrouter.get('/listSurvey', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n  res.render('surveys/index.ejs', { \n      title: 'My Survey List',\n      displayName: req.user ? req.user.displayName : '',\n      username: req.user ? req.user.username : '' \n  });\n});\n/*  */\nrouter.get('/listSurvey/create', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n    res.render('surveys/index.ejs', {\n        title: 'My Survey List',\n        displayName: req.user ? req.user.displayName : '',\n        username: req.user ? req.user.username : ''\n    });\n});\n/* Render Login page. */\nrouter.get('/login', function (req, res, next) {\n    if (!req.user) {\n        res.render('login', {\n            title: 'Login',\n            messages: req.flash('loginMessage'),\n            displayName: req.user ? req.user.displayName : ''\n        });\n    }\n    else {\n        return res.redirect('/listSurvey')//redirect to listsurvey if logged in\n    }\n});\n\n\nmodule.exports = router;\n"],"sourceRoot":"/source/"}